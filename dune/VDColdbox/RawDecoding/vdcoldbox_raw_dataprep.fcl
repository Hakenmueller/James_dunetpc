###include "vdcoldbox_tools.fcl"
#include "protoDUNE_reco_data_Dec2018.fcl"
#include "protodune_tools_dune.fcl"
#include "vdcb_tools.fcl"

process_name: VDSourcePrep

services: {
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} 
  FileCatalogMetadata:  @local::art_file_catalog_data
                        @table::protodune_rawdecoding_services
                        @table::protodune_data_reco_services
  message:              @local::dune_message_services_prod
  FileCatalogMetadata: {
#       campaign: "beam_prep"
       metadataFromInput: [ "dunemeta.data_stream", "dunemeta.dune_data.daqconfigname", 
                            "dunemeta.dune_data.detector_config", "dunemeta.dune_data.inconsistent_hw_config",
                            "dunemeta.dune_data.is_fake_data", "dunemeta.dune_data.accouple",
                            "dunemeta.dune_data.calibpulsemode", "dunemeta.dune_data.febaselinehigh",
                            "dunemeta.dune_data.fegain", "dunemeta.dune_data.feleak10x",
                            "dunemeta.dune_data.feleakhigh", "dunemeta.dune_data.feshapingtime", "events",
                            "data_quality.online_good_run_list", "detector.hv_value" ]
       applicationVersion: "v07_08_00_04"
       fileType: "detector"
       runType: "protodune-sp"

  }
    

  VDColdboxChannelMapService: {
    FileName:         "vdcbce_chanmap_v1_dcchan3200.txt"
    LogLevel:         1
  }
  TFileService: { 
      closeFileFast: true  # default
      fileName: "hist_%ifb_decoder_reco1.root"
      tmpDir: "<parent-path-of-filename>"  # default
  }
  IFBeam:            {}
  IFDH:              {}
  ChannelStatusService: {
    BadChannels: []
    NoisyChannels: []
    service_provider: "SimpleChannelStatusService"
  }
  Geometry: @local::dunevdcb_geo
}

outputs: {
  rootout: {
    module_type: RootOutput
    fileName: "out_raw_dataprep.root"
    dataTier:    "full-reconstructed"
    compressionLevel: 1
  }
}

physics: {
  producers: {
    caldata: @local::protoDUNE_reco_data_producers.caldata
  }

  produce: [
    caldata
  ]

  output : [ rootout ]
  trigger_paths: [produce]
  end_paths : [ output ]
}

source: {
  module_type: VDColdboxHDF5RawInput
  #fileName: "dune_test.root"
}

tools.vdtool: {
  tool_type: "VDColdboxDataInterface"
}


#tools.channelRanges: @local::vd_coldbox_channelRanges 
#tools.channelGroups: @local::vd_coldbox_channelGroups 
services.LArFFT.FFTSize: 10000
physics.producers.caldata.DecoderTool: "vdtool"
physics.producers.caldata.OnlineChannelMapTool: onlineChannelMapVdcb
physics.producers.caldata.OutputDigitName: "dataprep"
physics.producers.caldata.OutputWireName: "dataprep"
physics.producers.caldata.ChannelGroups: ["crb", "crbg"]
services.RawDigitPrepService.ToolNames: [
  digitReader,            # Unpack the digits acd.raw[] and acd.pedestal
  adcSampleFiller,        # Fill acd.samples from acd.raw - pedestal
  vdcbb_adcChannelPedestalPlotter,   # Plot pedestals
  vdcbb_adcChannelRawRmsPlotter,     # Plot ADC-pedestal RMS
  adcKeepAllSignalFinder  # Flag all samples as signal, i.e. acd.signal[] = true
]

tools.vdcbb_adcChannelRawRmsPlotter.MetricMax: 100
