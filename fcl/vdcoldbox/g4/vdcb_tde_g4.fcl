#include "LArG4.fcl"
#include "IonAndScint_dune.fcl"
#include "elecdrift_dune.fcl"
#include "PDFastSim_dune.fcl"
#include "services_vdcoldbox.fcl"

process_name: G4

services:
{
  # Load the service that manages root files for histograms.
  TFileService:          { fileName: "g4_hist.root" }
  TimeTracker:           {}
  MemoryTracker:         {} # default is one
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:   @local::art_file_catalog_mc

  # the correct config should be added to dune/Simulation/larg4services_dune.fcl
  LArG4Detector: {
    category      : "world"
    gdmlFileName_ : @local::dunevdcb_geo.GDML
    volumeNames   : [ "volTPCActive" ] 
    stepLimits    : [0.4]       
}
  @table::common_larg4_services
  @table::vdcb_services
  @table::vdcb_sim_base_services
} # end services

##services.OpDetResponseInterface.QuantumEfficiency: 0.001

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

  producers:
  {
     largeant:    @local::vdcb_tde_larg4
     IonAndScint: @local::vdcb_tde_ionandscint
     IonAndScintExternal: @local::vdcb_tde_ionandscint_external
     elecDrift:   @local::vdcb_tde_elecdrift
     PDFastSimAr: @local::vdcb_tde_pdfastsim_par_ar_fastonly
     PDFastSimArExternal: @local::vdcb_tde_pdfastsim_par_ar_external_fastonly
##     PDFastSimXe: @local::vdcb_tde_pdfastsim_par_xe
##     PDFastSimXeExternal: @local::vdcb_tde_pdfastsim_par_xe_external
     rns:         { module_type: "RandomNumberSaver" }
  }

  #define the producer and filter modules for this path, order matters, 
  #filters reject all following items.  see lines starting physics.producers below
  simulate: [ rns, largeant, IonAndScint, IonAndScintExternal, elecDrift, PDFastSimAr, PDFastSimArExternal ]
#  simulate: [ rns, largeant , IonAndScint, IonAndScintExternal, elecDrift, PDFastSimAr, PDFastSimXe, PDFastSimArExternal, PDFastSimXeExternal ]
 
  #define the output stream, there could be more than one if using filters 
  stream1:  [ out1 ]

  #trigger_paths is a keyword and contains the paths that modify the art::event, 
  #ie filters and producers
  trigger_paths: [simulate] 

  #end_paths is a keyword and contains the paths that do not modify the art::Event, 
  #ie analyzers and output streams.  these all run simultaneously
  end_paths:     [stream1]  
}



#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "%ifb_g4.root"
    dataTier:    "simulated"
    compressionLevel: 1
  }
}


